#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Aug 29 15:58:04 2022

@author: zach0422
"""
import pandas as pd
import seaborn as sns
df = pd.read_csv('/Users/zach0422/Desktop/STAT3250/virginia21.csv')

#minimum needed is the dataframe and a variable
sns.displot(data=df, x="ERA")

#use y instead of x to orient horizontally instead of vertically
sns.displot(data=df, y="ERA")

# "binrange" specifies start and end of bins
sns.displot(data=df, x='ERA',
            binrange=[0,16])

#"binwidth" = width of bins(start point generated by default)
sns.displot(data=df, x="ERA",
            binwidth=3)

#"bins" = set number of bins
sns.displot(data=df, x="ERA",
            bins=7)

#bins also allows specifying the exact bin boundaries
sns.displot(data=df, x="ERA",
            bins=[0,3,6,9,12,15])

#Reset both the fill and the outline color
sns.displot(data=df, x="ERA",
            binwidth=2,
            color='Green',
            edgecolor='Red')

#Reset the color of the bin outline with bin not filled
sns.displot(data=df, x='ERA',
            binwidth = 2,
            fill = False,
            color='Red')

##color fills the bins with the given color
sns.displot(data=df, x='ERA',
            binwidth = 2,
            color='Red')

#make the bins not filled
sns.displot(data=df, x='ERA',
            binwidth = 2,
            fill = False)

#'count' is the default
sns.displot(data=df, x="ERA",
            binwidth=2,
            stat='count')

#3'probability' is also an option
sns.displot(data=df, x="ERA",
            binwidth=2,
            stat='probability')

#### setting plot labels and title
p = sns.displot(data=df, x='ERA', binwidth=2)
p.set(xlabel='ERA (by game)',
      ylabel='Number of games',
      title='Sample Histogram')

#### scatterplot of 'Hits' vs 'Runs'
sns.relplot(data=df, x='Hits', y='Runs')

#Add modified axes labels and titles
p = sns.relplot(data=df, x='Hits', y='Runs')
p.set(xlabel='Hits (per game)',
      ylabel='Runs (per game)',
      title='Hits vs Runs (UVA baseball)',
      xticks=[4,8,12,16],
      yticks=[2,4,6,8,10,12,14,16,18])

#we can use 'regplot' to add a regression line to the graph
p = sns.regplot(data=df, x='Hits', y='Runs')
p.set(xlabel='Hits (per game)',
      ylabel='Runs (per game)',
      title='Hits vs Runs (UVA baseball)',
      xticks=[4,8,12,16],
      yticks=[2,4,6,8,10,12,14,16,18])

# we can suppress the confidence band and change the color and markers
p = sns.regplot(data=df, x='Hits', y='Runs',
                ci=None,
                marker='x')
p.set(xlabel='Hits (per game)',
      ylabel='Runs (per game)',
      title='Hits vs Runs (UVA baseball)',
      xticks=[4,8,12,16],
      yticks=[2,4,6,8,10,12,14,16,18])

#### boxplot of 'hit' variable
sns.boxplot(data=df, x='Hits')

#We can add some extra features
p = sns.boxplot(data=df, x='Runs', 
                color='Red',
                width=0.5)
p.set(xlabel='Runs scored',
      title='Boxplot of UVA Runs Scored',
      xticks=[0,3,6,9,12,15,18])

#### Barplot for playerused variable
p = sns.countplot(data=df, x='PlayersUsed')

#as before, we can alter the axes labels and add a title
p = sns.countplot(data=df, x='PlayersUsed')
p.set(xlabel='Number of players used',
      ylabel='number of games',
      title='Counts for UVA number if players used')

# We can instead have the y-axis be the mean for each player count
sns.barplot(data=df, x='Location', y='Runs')

# A nicer version
p = sns.barplot(data=df, x='Location', y='Runs',
                order=['Home', 'Visitor'],
                color='Green',
                ci=None)
p.set(ylabel='Mean number of runs',
      xlabel='Game Location',
      title='Average number of runs by location')














